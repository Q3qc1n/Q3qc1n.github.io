<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>CYBERGON_CTF 2024 (复现)</title>
      <link href="/2024/12/04/CYBERGON-2024/"/>
      <url>/2024/12/04/CYBERGON-2024/</url>
      
        <content type="html"><![CDATA[<h1 id="Web"><a href="#Web" class="headerlink" title="Web"></a>Web</h1><h2 id="Trickery-Number"><a href="#Trickery-Number" class="headerlink" title="Trickery Number"></a>Trickery Number</h2><h3 id="解题思路："><a href="#解题思路：" class="headerlink" title="解题思路："></a>解题思路：</h3><p>开启题目，发现需要我们知道y的值才能得到flag，先输入个1，发现url尾巴加上了&#x2F;？y&#x3D;1，然后下载题目附件看看，代码审计看到一段重要的代码.</p><img src="/img/CYBERGON_CTF2024/2.png" width="%50" /><img src="/img/CYBERGON_CTF2024/1.png" width="" /><p>第38-41行代码用于输出flag，看一下if条件，去搜了以下BigInt和parseInt两个函数，发现BigInt函数存在阈值，它只能表示2^53-1以内的整数，再看到35-37行代码，y最大长度不大于17，而2^53-1刚好才16位，所以我们只要让y&#x3D;一个17位的数字即可。</p><img src="/img/CYBERGON_CTF2024/3.png" width="%50" />]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第一届“吾杯”网络安全技能大赛 (复现)</title>
      <link href="/2024/12/03/WuCup2024/"/>
      <url>/2024/12/03/WuCup2024/</url>
      
        <content type="html"><![CDATA[<p>题目环境只保留了四个小时，wp也没出，没来得及复现，其他题也复现不了了，只能看看其他师傅的wp学习学习。</p><h1 id="Misc"><a href="#Misc" class="headerlink" title="Misc"></a>Misc</h1><h2 id="原神启动"><a href="#原神启动" class="headerlink" title="原神启动"></a>原神启动</h2><h3 id="解题思路："><a href="#解题思路：" class="headerlink" title="解题思路："></a>解题思路：</h3><p>下载附件得到两个文件，发现压缩文件解压需要密码，先看看png图片，放到stegsolve里面看看。</p><img src="/img/Wu_Cup2024/7.png" width="" /><img src="/img/Wu_Cup2024/1.png" width="50%" /><p>emm假flag，那应该就是解压密码，flag格式的密码真的难绷，解压得到一个docx文件，打开滚到35页好像发现flag，看不清，拿到stegsolve看看。</p><img src="/img/Wu_Cup2024/8.png" width="50%" /><img src="/img/Wu_Cup2024/3.png" width="50%" /><p>还是假的，把这个docx文件以zip打开，发现目录下还有一个img.zip,里面有个text.zip,需要解压密码，把刚得到的假flag拿去解压发现密码不对，看看目录下其他文件，最终在word文件夹里的document.xml,找到解压密码。</p><img src="/img/Wu_Cup2024/5.png" width="50%" /><img src="/img/Wu_Cup2024/4.png" width="50%" /><p>再拿去解压得到flag。</p><img src="/img/Wu_Cup2024/6.png" width="" /><p>原神套娃，真的唐。</p><h1 id="Crypto-这题当时AI一把梭秒了"><a href="#Crypto-这题当时AI一把梭秒了" class="headerlink" title="Crypto (这题当时AI一把梭秒了)"></a>Crypto (这题当时AI一把梭秒了)</h1><h2 id="Easy"><a href="#Easy" class="headerlink" title="Easy"></a>Easy</h2><h3 id="解题思路：-1"><a href="#解题思路：-1" class="headerlink" title="解题思路："></a>解题思路：</h3><p>下载附件解压得到两个文件，密文，加密算法和key都给了，当时比赛就直接丢给通义给了个脚本秒了。</p><img src="/img/Wu_Cup2024/9.png" width="50%" /><img src="/img/Wu_Cup2024/10.png" width="50%" /><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"></span><br><span class="line">encoded_str = <span class="string">&quot;MkpIbmdFcWs4MzVjR3BHRXFVVnZtZWJUQWtSTlNNamE1dGZYQTdwR25ac203SnJQV2FyTUdHQnA3Uk1XZDNZVFlTNTJjemVya1BCN0dBY2NBNkN4U1VBS29TalVBOU1tR1EyYUF0UVlHZTFYOXp1TThWS2o1OHdKRFJaVXhzTGRaZUpaTGV6NUFWc2JHdm5CbTdjV28yNTRyWGpzQURYdEhkSmJmWmtGREVEQWZWeEhFeDNYanNNODZMZVo2cnM2NExGbU5QeG1mUXBqQ3BoY3pCczlRa3kySnFZb1JzSnFtUnk0cW02WFgyOU50N1g2Vg==&quot;</span></span><br><span class="line">decoded_bytes = base64.b64decode(encoded_str)</span><br><span class="line">decoded_str = decoded_bytes.decode(<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(decoded_str)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">rc4</span>(<span class="params">key, data</span>):</span><br><span class="line">    S = <span class="built_in">list</span>(<span class="built_in">range</span>(<span class="number">256</span>))</span><br><span class="line">    T = [<span class="built_in">ord</span>(key[i % <span class="built_in">len</span>(key)]) <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">256</span>)]</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 密钥调度算法 (KSA)</span></span><br><span class="line">    j = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">256</span>):</span><br><span class="line">        j = (j + S[i] + T[i]) % <span class="number">256</span></span><br><span class="line">        S[i], S[j] = S[j], S[i]</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 伪随机生成算法 (PRGA)</span></span><br><span class="line">    i = j = <span class="number">0</span></span><br><span class="line">    result = []</span><br><span class="line">    <span class="keyword">for</span> m <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(data)):</span><br><span class="line">        i = (i + <span class="number">1</span>) % <span class="number">256</span></span><br><span class="line">        j = (j + S[i]) % <span class="number">256</span></span><br><span class="line">        S[i], S[j] = S[j], S[i]</span><br><span class="line">        x = (S[i] + S[j]) % <span class="number">256</span></span><br><span class="line">        result.append(data[m] ^ S[x])</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">bytes</span>(result)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 已知密钥</span></span><br><span class="line">key = <span class="string">&quot;hello world&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 十六进制的 flag</span></span><br><span class="line">hex_flag = <span class="string">&quot;d8d2963e0d8ab8533d2a7fe296c5292339246eba0d292d5752578359322c3a77892dfa7261b84f&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 将十六进制字符串转换为字节</span></span><br><span class="line">data = <span class="built_in">bytes</span>.fromhex(hex_flag)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 解密 flag</span></span><br><span class="line">decrypted_flag = rc4(key, data)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;Decrypted Flag:&quot;</span>, decrypted_flag.decode(<span class="string">&#x27;utf-8&#x27;</span>))</span><br><span class="line"></span><br></pre></td></tr></table></figure><img src="/img/Wu_Cup2024/12.png" width="" /><p>赛后看了其他师傅的wp，想试一下用赛博厨子（还没用过不会用），结果出来乱码。。。。</p><img src="/img/Wu_Cup2024/11.png" width="70%" /><h1 id="Web"><a href="#Web" class="headerlink" title="Web"></a>Web</h1><h2 id="sign"><a href="#sign" class="headerlink" title="sign"></a>sign</h2><h3 id="解题思路：-2"><a href="#解题思路：-2" class="headerlink" title="解题思路："></a>解题思路：</h3><p>当时密码和misc的签到都做出来了，偏偏web的不出，一个web手轻轻地碎了。</p><p>访问题目页面就给了passwd:sgin,看题目描述考虑post传参passwd&#x3D;sgin，然后就。。。。失败了，然后盯着看了好久还是没思路，放弃了。后面题目放了hint，真的很简单，蚁剑连一下就行了，密码就是sign，flag就在根目录下。</p><img src="/img/Wu_Cup2024/13.png" width="70%" />]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Web </tag>
            
            <tag> Misc </tag>
            
            <tag> Crypto </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SHCTF2024 WriteUp</title>
      <link href="/2024/11/30/SHCTF2024-WP/"/>
      <url>/2024/11/30/SHCTF2024-WP/</url>
      
        <content type="html"><![CDATA[<h1 id="Web"><a href="#Web" class="headerlink" title="Web"></a>Web</h1><h2 id="Week-1"><a href="#Week-1" class="headerlink" title="Week 1"></a>Week 1</h2><h3 id="1-1zflask"><a href="#1-1zflask" class="headerlink" title="1. 1zflask"></a>1. 1zflask</h3><h4 id="解题思路："><a href="#解题思路：" class="headerlink" title="解题思路："></a>解题思路：</h4><p>首先打开容器发现出现404网页，刚开始很懵，后来明白了原来是出题人没做主页<del>nishen太懒</del>。根据题目描述，<br>我们访问robots.txt，发现一个&#x2F;s3recttt路由，访问下载源码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> flask</span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, request,  send_from_directory, send</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/api&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">api</span>():</span><br><span class="line">    cmd = request.args.get(<span class="string">&#x27;SSHCTFF&#x27;</span>, <span class="string">&#x27;ls /&#x27;</span>)</span><br><span class="line">    result = os.popen(cmd).read()</span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/robots.txt&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">static_from_root</span>():</span><br><span class="line">    <span class="keyword">return</span> send_from_directory(app.static_folder,<span class="string">&#x27;robots.txt&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/s3recttt&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_source</span>():</span><br><span class="line">    dile_path = <span class="string">&quot;app.py&quot;</span></span><br><span class="line">    <span class="keyword">return</span> send_file(file_path, as_attachment=true)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ ==<span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    app.run(debug-<span class="literal">True</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>我们可以看到&#x2F;api路由，默认传参SSHCTFF&#x3D;ls &#x2F;,执行结果通过os.open读取,访问该路由则会列出:</p><img src="/img/SHCTF2024/SH_1zflask1.png" width="50%" /><p>我们把参数值改一下变成SSHCTFF&#x3D;cat &#x2F;flag就能成功得到flag了。</p><img src="/img/SH_1zflask2.png" width="" /><h3 id="2-ez-gittt"><a href="#2-ez-gittt" class="headerlink" title="2. ez_gittt"></a>2. ez_gittt</h3><h4 id="解题思路：-1"><a href="#解题思路：-1" class="headerlink" title="解题思路："></a>解题思路：</h4><p>开启题目查看源码看到注释里有“你说这个Rxuxin会不会喜欢把自己的秘密写到git之类什么的”，可能存在git泄露，拿dirsearch扫一下确实存在，再用GitHack克隆目录，然后使用cd命令进入dist文件中新生成的文件，再使用git log命令查看历史提交记录，如下</p><img src="/img/SHCTF2024/git1.png" width="50%" /><img src="/img/SHCTF2024/git2.png" width="50%" /><h3 id="3-jvav"><a href="#3-jvav" class="headerlink" title="3.jvav"></a>3.jvav</h3><h4 id="解题思路：-2"><a href="#解题思路：-2" class="headerlink" title="解题思路："></a>解题思路：</h4><p>开启题目发现如图输入框，而且可以执行</p><img src="/img/SHCTF2024/jvav1.png" width="50%" /><p>再根据题目描述“如果你已经会用java写hello world了，那么可以试试java怎么执行system command”，题目意思很明确，我们只需要用java写实现命令执行的代码就行了，不会写直接AI一把梭就行了，需要注意的是我们定义的类需要是demo（public class demo），然后按部就班ls &#x2F;再cat &#x2F;flag就行了。flag： SHCTF{1cd97424-7553-4571-a6cc-c9d7a2cc8237}</p><h3 id="4-蛐蛐？-蛐蛐！"><a href="#4-蛐蛐？-蛐蛐！" class="headerlink" title="4. 蛐蛐？ 蛐蛐！"></a>4. 蛐蛐？ 蛐蛐！</h3><h4 id="解题思路：-3"><a href="#解题思路：-3" class="headerlink" title="解题思路："></a>解题思路：</h4><p>首先查看源码发现有个重要的source.txt，访问一下得到如下代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;ququ&#x27;</span>] == <span class="number">114514</span> &amp;&amp; <span class="title function_ invoke__">strrev</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;ququ&#x27;</span>])!= <span class="number">415411</span>)&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;ququ&#x27;</span>]!=<span class="literal">null</span>)&#123;</span><br><span class="line">        <span class="variable">$eval_param</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;ququ&#x27;</span>];</span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">strncmp</span>(<span class="variable">$eval_param</span>,<span class="string">&#x27;ququk1&#x27;</span>,<span class="number">6</span>)===<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">eval</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;ququ&#x27;</span>]);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">echo</span>(<span class="string">&quot;不知道为啥变乱码了&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_ invoke__">ehco</span>(<span class="string">&quot;不知道为啥变乱码了&quot;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">echo</span>(<span class="string">&quot;不知道为啥变乱码了&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>第一个条件get传参ququ&#x3D;114514，但其反转字符串不等于415411，ququ&#x3D;114514a就能绕过，然后post传参，并且当前六个字段是ququk1时，eval函数会将ququ的值作为php代码执行（注意代码闭合不要漏了;），简单的rce，直接常规ls 和cat得到flag。</p><h3 id="5-单身十八年的手速"><a href="#5-单身十八年的手速" class="headerlink" title="5.单身十八年的手速"></a>5.单身十八年的手速</h3><h4 id="解题思路：-4"><a href="#解题思路：-4" class="headerlink" title="解题思路："></a>解题思路：</h4><p>点击就送flag（偷个懒）。</p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>欢迎来到我的博客！</title>
      <link href="/2024/11/30/%E6%AC%A2%E8%BF%8E%E6%9D%A5%E5%88%B0%E6%88%91%E7%9A%84%E5%8D%9A%E5%AE%A2%EF%BC%81/"/>
      <url>/2024/11/30/%E6%AC%A2%E8%BF%8E%E6%9D%A5%E5%88%B0%E6%88%91%E7%9A%84%E5%8D%9A%E5%AE%A2%EF%BC%81/</url>
      
        <content type="html"><![CDATA[<h1 id="欢迎来到我的博客！！！"><a href="#欢迎来到我的博客！！！" class="headerlink" title="欢迎来到我的博客！！！"></a>欢迎来到我的博客！！！</h1><p>这里是 Q3q_c1n 的个人博客。</p><p>本页主要发布更新日志，想了解我多一点点请<del>看VCR</del>到关于页面瞅瞅。</p><hr><h2 id="Log"><a href="#Log" class="headerlink" title="Log"></a>Log</h2><div class="timeline blue"><div class='timeline-item headline'><div class='timeline-item-title'><div class='item-circle'></div></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p><strong>2024-11-30 13:52:00</strong></p></div></div><div class='timeline-item-content'><p><strong>历时<del>两年（）</del>应该两三天吧，哈哈我宣布我的个人博客正式启动！！！</strong></p><p><font size = 5 color=red>那不是黑历史，是我的来时路</font></p><p>因为本人有点强迫症，一准备搭博客就想一次性搞好，所以也就没有一步一步的更新日志。<br>下面统一说明：</p><ol><li>本站以Hexo为框架，Butterfly为主题搭建的，找了一些教程魔改了以下，现在看起来还是美观很多的。</li><li>由于魔改已经进行了大半，就不一一列举了，后面有改动的话再写进该日志里。</li><li>目前还有一些功能没实现，清单中的音乐、照片、电影和友链目前没哈用，留言板我也不知道有没有用，至少是有东西的。</li><li>感觉文章内的字体还是有点小，后面有时间载改进吧。</li><li>图片都是朋友给的，不过还不太够用，愿意提供的可以联系我。  </li><li>在网上找了一堆教程，从0到有的这几天的天真的很黑~</li></ol></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p><strong>2024-11-30 16:04:00</strong></p></div></div><div class='timeline-item-content'><p>目前只把SHCTF2024 week1 的wp写上去了，之前的wp到底怎么打包copy过来啊，重写累似了，以后wp直接写这了…<br>其他的wp后续有空再补上吧。</p></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p><strong>2024-12-03 19:58:00</strong></p></div></div><div class='timeline-item-content'><p>更新了第一届 “吾杯” 网络安全技能大赛 (复现)，来看看吧！<br>比赛环境只保留了四个小时，没来得及复现，misc题刚好下了附件，能复现一下。</p></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p><strong>2024-12-04 11:11:00</strong></p></div></div><div class='timeline-item-content'><p>更新了第一届 CYBERGON_CTF 2024 (复现) .</p></div></div></div>]]></content>
      
      
      <categories>
          
          <category> 更新日志 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 建站 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>java</title>
      <link href="/2024/11/30/java/"/>
      <url>/2024/11/30/java/</url>
      
        <content type="html"><![CDATA[<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyFirstJavaProgram</span> &#123;</span><br><span class="line">   <span class="comment">/* 第一个Java程序.</span></span><br><span class="line"><span class="comment">    * 他将打印字符串 Hello World</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String []args)</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Hello Welcome to learn 加瓦炒粉&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第一篇文章</title>
      <link href="/2024/11/29/%E7%AC%AC%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0/"/>
      <url>/2024/11/29/%E7%AC%AC%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0/</url>
      
        <content type="html"><![CDATA[<h2 id="这是我的第一篇文章"><a href="#这是我的第一篇文章" class="headerlink" title="这是我的第一篇文章"></a>这是我的第一篇文章</h2>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 搭建博客 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2024/11/29/hello-world/"/>
      <url>/2024/11/29/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 搭建博客 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
